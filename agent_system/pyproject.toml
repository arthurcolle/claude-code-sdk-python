[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "claude-code-agent-system"
version = "0.1.0"
description = "Multi-agent orchestration system built on Claude Code SDK"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Anthropic", email = "support@anthropic.com"}
]
keywords = [
    "claude",
    "ai",
    "agents",
    "multi-agent",
    "orchestration",
    "automation",
    "code-generation"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "claude-code-sdk>=0.0.10",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "python-multipart>=0.0.6",
    "websockets>=12.0",
    "anyio>=3.7.0",
]

[project.optional-dependencies]
full = [
    "neo4j>=5.0.0",
    "redis>=5.0.0",
    "aioredis>=2.0.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.6.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]

[project.urls]
Homepage = "https://github.com/anthropics/claude-code-sdk-python"
Documentation = "https://github.com/anthropics/claude-code-sdk-python/tree/main/agent_system"
"Bug Tracker" = "https://github.com/anthropics/claude-code-sdk-python/issues"

[project.scripts]
claude-agent-system = "agents.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*"]

[tool.setuptools.package-data]
agents = ["py.typed"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
strict_optional = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["ARG"]

[tool.ruff.lint.isort]
known-first-party = ["agents", "claude_code_sdk"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"